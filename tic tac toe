stinrg
#name=("maxim")
#print(f"ma numesc {name}")

#integrers
#age=16
#clas=10
#print(f"eu am {age} ani ")
#print(f"sunt in clasa a {clas}")

#float
#price=1000.99
#print(f"televizorul acesta costa{price}euro ")

#bool
#place_inotul=True
#if place_inotul:
#    print("imi place sa inot ")
#else:
# print("nu imi place sa inot")



#typecasting
#name="Maxim"
#age=12
#price=1000.99
#is_student=False
#age=int(age)
#print(price)
#is_student=bool(is_student)
#print(is_student)
#ame=bool(name)
#print(n



#item=input("What item do you like to buy?  ")
#price=float(input("What is the price"))
#quantity=int(input("how many do you like to buy "))
#total= quantity * price
#print(f"you have bought {quantity}*{price}/s")
#print(f"your total is : {
# int(input("what is your name Sir "))



#-----------------------------------------------------------------------------------------------------------------

#friends = 33

#friends *= 5
#friends **= 2
#remainder = friends % 3       {cat va ramane daca din grupul de 10 ii punem in grupe a cate 3 )
#print(remainder)

#---------------------------------------------------------------------------------------------
#x= 5.23
#result= round(x) aceasta comdanda ne permite sa rotungim cifra care este la x
#print(result)
#---------------------------------------------------------------------------------------------
#x= 2
#result = pow(x,5) la ptereaa {pow}
#print(result)
#--------------------------------------------------------------------------------------------------
#x= 10
#y= 30
#g= 33.5
#result = min(x , y ,g )valorile minime le verifica din asta
#result = max(x , y ,g ) valorile maxime le verifica
#print (result)
#--------------------------------------------------------------------------------------------------------------
#x=9
#import math

#result=math.sqrt(x)
#print(result)
#----------------------------------------------------------------------------------------------------
#import math
#radius=float(input(" enter the radius of the circle  :"))

#circumference = 2 * math.pi * radius
 # print(f'the circumference of cicle  is :{circumference}'

--------------------------------------------------------------------------------------------------------------------------
for i in range(1,11):
   if i == 4:
       continue # Trece mai Departe
   if i == 7:
       break;  #Opreste cand ajungem la 7
   if i == 1:
       pass
   print(i)"""


"""def print_tic_tac_toe(values):  #Panoul nostru de joc
   print("\n")
   print("\t      |        |       ")
   print("\t  {}   |   {}    |   {}   ".format(values[0],values[1],values[2]))
   print("\t______|________|_______")
   print("\t      |        |       ")
   print("\t  {}   |   {}    |   {}   ".format(values[3],values[4],values[5]))
   print("\t______|________|_______")
   print("\t      |        |       ")
   print("\t  {}   |   {}    |   {}   ".format(values[6],values[7],values[8]))
   print("\t      |        |       ")
   print("\n")
def print_scoreboard(score_board):
   print("\t---------------------------------------------------")
   print("\t               SCOREBOARD                          ")
   print("\t---------------------------------------------------")
   players = list(score_board.keys())
   print("\t   ", players[0], "\t  ", score_board[players[0]])
   print("\t   ", players[1], "\t  ", score_board[players[1]])
   print("\t---------------------------------------------------")
def check_win(player_pos, cur_player): #{'X': 1,2,5, 3 } {'O' : 5 }
   soln = [[1,2,3],[4,5,6],[7,8,9],[1,4,7],[2,5,8],[3,6,9],[1,5,9],[3,5,7]] #soln= solutia ( corect )
   for x in soln:
       if all(y in player_pos[cur_player] for y in x):
           return True
   return False
def check_draw(player_pos):
   if len(player_pos['X'])+ len(player_pos['O']) == 9:
       return True 
   return False
def  single_game(cur_player):
   values = [' ' for x in range(9)]
   player_pos = {'X': [] , 'O': []}
   while True:
       print_tic_tac_toe(values)
       try:
           print("Player" , cur_player, " turn. Which box? : ", end=" ")
           move = int(input())
       except ValueError:
           print("Wrong Input!!! Try Again")
           continue
       if move < 1 or move > 9:
           print("Wrong Input!!!")
           continue
       if values[move - 1] != " ":
           print("Place alredy filled")
           continue
       values[move - 1] = cur_player
       player_pos[cur_player].append(move)
       if check_win(player_pos, cur_player):
           print_tic_tac_toe(values)
           print("Player ", cur_player, "has won the game")
           print("\n")
           return cur_player
       if check_draw(player_pos):
           print_tic_tac_toe(values)
           print("Game Drawn")
           print("\n")
           return 'D'
       if cur_player == 'X':
           cur_player = 'O'
       else:
           cur_player = 'X' 














if __name__ == "__main__":
   print("Player 1")
   player1 = input("Enter the name: ")
   print("\n")
   print("Player 2")
   player2 = input("Enter the name: ")
   print("\n")
   cur_player = player1
   player_choice = {'X': "", "O" : ""}
   options = ['X','O']
   score_board = {player1: 0, player2 : 0}
   print_scoreboard(score_board)
   while True:
       print("Turn to choose for", cur_player)
       print("Enter 1 for X")
       print("Enter 2 for O")
       print("Enter 3 to Quit")
       try:
           choice = int(input())
       except ValueError:
           print("Wrong Input!!! Try Again \n")
           continue
       if choice == 1:
           player_choice['X'] = cur_player
           if cur_player == player1:
               player_choice['O'] = player2
           else:
               player_choice['O'] = player1
       elif choice == 2:
           player_choice['O'] = cur_player
           if cur_player == player1:
               player_choice['X'] = player2
           else:
               player_choice['X'] = player1

       elif choice == 3:
           print("Final Score")
           print_scoreboard(score_board)
           break
       else:
           print("Wrong Choice!!! Try Again\n")
       winner = single_game(options[choice -1])
       if winner != 'D':
           player_won = player_choice[winner]
           score_board[player_won] = score_board[player_won] + 1
       print_scoreboard(score_board)
       if cur_player == player1:
           cur_player = player2
       else:
           cur_player = player1
