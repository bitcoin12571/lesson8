class Node(object):
    def __init__(self,value):
        self.value=value
        self.left= None
        self.right = None

class BinaryTree(object):
    def __init__(self,root):
        self.root=Node(root)

    def print_tree(self,traversal_type):
        if traversal_type=="preorder":
            return self.preorder_print(self.root,"")
        else:
            print("TRAVERSAL TYPE "+str(traversal_type)+"")
            return False
    def preorder_print(self,start,traversal):
        if start:
            traversal+=(str(start.value)+".")
            traversal= self.preorder_print(start.left,traversal)
            traversal =self.preorder_print(start.right,traversal)
        return traversal

tree = BinaryTree(1)
tree.root.left = Node(2)
tree.root.right = Node(3)
tree.root.left.left = Node(4)
tree.root.left.right = Node(5)
tree.root.right.left = Node(6)
tree.root.right.right = Node(7)
tree.root.right.right.right = Node(8)
tree.root.right.right.left = Node(9)
tree.root.right.right.left.left = Node(10)
tree.root.right.right.left.right = Node(11)
tree.root.right.right.left.right.left = Node(12)
tree.root.right.right.left.right.right = Node(13)
tree.root.right.right.left.right.right.right = Node(14)
tree.root.right.right.left.right.right.right.left = Node(15)
tree.root.right.right.left.right.right.right.right = Node(16)

print(tree.print_tree("preorder"))








